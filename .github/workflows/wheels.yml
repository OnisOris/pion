name: Build and Publish

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]
    tags:
      - 'v*'

jobs:
  build_wheels:
    if: startsWith(github.ref, 'refs/tags/')
    name: Build wheels
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        os: [ linux-intel, linux-arm, windows, macOS-intel, macOS-arm ]
        include:
          - archs: auto
            platform: auto
          - os: linux-intel
            runs-on: ubuntu-latest
          - os: linux-arm
            runs-on: ubuntu-24.04-arm
          - os: windows
            runs-on: windows-latest
          - os: macos-intel
            # macos-13 was the last x86_64 runner
            runs-on: macos-13
          - os: macos-arm
            # macos-14+ (including latest) are ARM64 runners
            runs-on: macos-latest
            archs: auto,universal2

    steps:
      - uses: actions/checkout@v4

      - name: Install ARM64 dependencies
        if: matrix.os == 'ubuntu-latest' && matrix.arch == 'arm64'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libopenblas-dev \
            liblapack-dev \
            gfortran

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.23.2
        env:
          CIBW_ARCHS: ${{ matrix.archs }}
          CIBW_PLATFORM: ${{ matrix.platform }}
          CIBW_SKIP: "pp*"
        with:
          package-dir: .
          output-dir: wheelhouse
          config-file: "pyproject.toml"

      - name: Upload wheels as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.python }}-${{ matrix.arch }}
          path: wheelhouse/*.whl

      - name: List wheels
        run: ls -alh wheelhouse

  # publish:
  #   if: startsWith(github.ref, 'refs/tags/')
  #   name: Publish wheels to PyPI
  #   needs: build_wheels
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Download all wheel artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         path: wheelhouse
  #
  #     - name: Flatten downloaded wheels
  #       run: |
  #         find wheelhouse -mindepth 2 -type f -name '*.whl' -exec mv {} wheelhouse/ \;
  #         find wheelhouse -type d -empty -delete
  #
  #     - name: List wheels
  #       run: ls -l wheelhouse/
  #
  #     - name: Publish to PyPI
  #       uses: pypa/gh-action-pypi-publish@v1.12.4
  #       with:
  #         packages_dir: wheelhouse
  #         user: __token__
  #         password: ${{ secrets.PYPI_API_TOKEN }}
